<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- /** * Licensed to the Apache Software Foundation (ASF) under one * 
		or more contributor license agreements. See the NOTICE file * distributed 
		with this work for additional information * regarding copyright ownership. 
		The ASF licenses this file * to you under the Apache License, Version 2.0 
		(the * "License"); you may not use this file except in compliance * with 
		the License. You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 
		* * Unless required by applicable law or agreed to in writing, software * 
		distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT 
		WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the 
		License for the specific language governing permissions and * limitations 
		under the License. */ -->
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>hbase</artifactId>
		<groupId>org.apache.hbase</groupId>
		<version>2.0.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<artifactId>hbase-tutorial</artifactId>
	<build>
		<!-- Makes sure the resources get added before they are processed by placing 
			this first -->
		<plugins>
			<!-- General plugins -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.jamon.project.jamonnature</projectnature>
					</additionalProjectnatures>
					<buildcommands>
						<buildcommand>org.jamon.project.templateBuilder</buildcommand>
						<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
						<buildcommand>org.jamon.project.markerUpdater</buildcommand>
					</buildcommands>
					<additionalConfig>
						<file>
							<name>.settings/org.jamon.prefs</name>
							<content># now
								eclipse.preferences.version=1
								templateSourceDir=src/main/jamon
								templateOutputDir=target/generated-jamon
							</content>
						</file>
					</additionalConfig>
				</configuration>
			</plugin>
			<!-- Run findbugs -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
			<!-- Testing plugins -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<properties>
						<property>
							<name>listener</name>
							<value>org.apache.hadoop.hbase.ServerResourceCheckerJUnitListener</value>
						</property>
					</properties>
					<systemPropertyVariables>
						<test.build.webapps>target/test-classes/webapps</test.build.webapps>
					</systemPropertyVariables>
				</configuration>
			</plugin>
		</plugins>
		<!-- General Resources -->
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself and needs to be kept 
					in plugin management, not in the actual plugins. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jamon</groupId>
										<artifactId>jamon-maven-plugin</artifactId>
										<versionRange>[2.3.4,)</versionRange>
										<goals>
											<goal>translate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
											<runOnConfiguration>true</runOnConfiguration>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.6,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
											<runOnConfiguration>true</runOnConfiguration>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>build-classpath</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-compiler-plugin</artifactId>
										<versionRange>[3.2,)</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<!-- Intra-project dependencies -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-protocol</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-procedure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-prefix-tree</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-common</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-annotations</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-server</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-procedure</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- resource bundle only needed at build time -->
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-resource-bundle</artifactId>
			<version>${project.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.6</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-hadoop-compat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase-hadoop-compat</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>${compat.module}</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>${compat.module}</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<!-- General dependencies -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-sslengine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-api-2.1</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>servlet-api-2.5</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>tomcat</groupId>
			<artifactId>jasper-compiler</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>tomcat</groupId>
			<artifactId>jasper-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jamon</groupId>
			<artifactId>jamon-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>

		<!-- tracing Dependencies -->
		<dependency>
			<groupId>org.apache.htrace</groupId>
			<artifactId>htrace-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-minikdc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.owasp.esapi</groupId>
			<artifactId>esapi</artifactId>
			<version>2.1.0</version>
			<exclusions>
				<exclusion>
					<artifactId>xercesImpl</artifactId>
					<groupId>xerces</groupId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<profiles>
		<!-- Needs to make the profile in apache parent pom -->
		<profile>
			<id>apache-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>license-javadocs</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/apidocs</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/javadoc/META-INF/</directory>
											<targetPath>META-INF/</targetPath>
											<includes>
												<include>LICENSE</include>
												<include>NOTICE</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Skip the tests in this module -->
		<profile>
			<id>skipServerTests</id>
			<activation>
				<property>
					<name>skipServerTests</name>
				</property>
			</activation>
			<properties>
				<surefire.skipFirstPart>true</surefire.skipFirstPart>
				<surefire.skipSecondPart>true</surefire.skipSecondPart>
			</properties>
		</profile>
		<!-- Special builds -->
		<profile>
			<id>native</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>make</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<mkdir dir="${project.build.directory}/native" />
										<exec executable="cmake" dir="${project.build.directory}/native"
											failonerror="true">
											<arg
												line="${basedir}/src/main/native -DJVM_ARCH_DATA_MODEL=${sun.arch.data.model}" />
										</exec>
										<exec executable="make" dir="${project.build.directory}/native"
											failonerror="true">
											<arg line="VERBOSE=1" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Profiles for building against different hadoop versions -->
		<!-- There are a lot of common dependencies used here, should investigate 
			if we can combine these profiles somehow -->
		<!-- profile against Hadoop 1.1.x: This is the default. It has to have 
			the same activation property as the parent Hadoop 1.1.x profile to make sure 
			it gets run at the same time. -->
		<profile>
			<id>hadoop-1.1</id>
			<activation>
				<property>
					<!--Below formatting for dev-support/generate-hadoopX-poms.sh -->
					<!--h1 -->
					<name>hadoop.profile</name>
					<value>1.1</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-test</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>hadoop-1.0</id>
			<activation>
				<property>
					<name>hadoop.profile</name>
					<value>1.0</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-test</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<!-- profile for building against Hadoop 2.0.0-alpha. Activate using: mvn 
			-Dhadoop.profile=2.0 -->
		<profile>
			<id>hadoop-2.0</id>
			<activation>
				<property>
					<!--Below formatting for dev-support/generate-hadoopX-poms.sh -->
					<!--h2 -->
					<name>!hadoop.profile</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-common</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-auth</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-client</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-mapreduce-client-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-mapreduce-client-jobclient</artifactId>
					<type>test-jar</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-hdfs</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-hdfs</artifactId>
					<type>test-jar</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-minicluster</artifactId>
					<scope>test</scope>
				</dependency>
				<!-- Hadoop needs Netty 3.x at test scope for the minicluster -->
				<dependency>
					<groupId>io.netty</groupId>
					<artifactId>netty</artifactId>
					<version>${netty.hadoop.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>create-mrapp-generated-classpath</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>build-classpath</goal>
								</goals>
								<configuration>
									<!-- needed to run the unit test for DS to generate the required 
										classpath that is required in the env of the launch container in the mini 
										mr/yarn cluster -->
									<outputFile>${project.build.directory}/test-classes/mrapp-generated-classpath</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- profile for building against Hadoop 3.0.x. Activate using: mvn -Dhadoop.profile=3.0 -->
		<profile>
			<id>hadoop-3.0</id>
			<activation>
				<property>
					<name>hadoop.profile</name>
					<value>3.0</value>
				</property>
			</activation>
			<properties>
				<hadoop.version>${hadoop-three.version}</hadoop.version>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-common</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-minicluster</artifactId>
				</dependency>
				<!-- Hadoop needs Netty 3.x at test scope for the minicluster -->
				<dependency>
					<groupId>io.netty</groupId>
					<artifactId>netty</artifactId>
					<version>3.6.2.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>create-mrapp-generated-classpath</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>build-classpath</goal>
								</goals>
								<configuration>
									<!-- needed to run the unit test for DS to generate the required 
										classpath that is required in the env of the launch container in the mini 
										mr/yarn cluster -->
									<outputFile>${project.build.directory}/test-classes/mrapp-generated-classpath</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>compile-protobuf</id>
			<activation>
				<property>
					<name>compile-protobuf</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-maven-plugins</artifactId>
						<executions>
							<execution>
								<id>compile-test-protoc</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>protoc</goal>
								</goals>
								<configuration>
									<imports>
										<param>${basedir}/src/test/protobuf</param>
									</imports>
									<source>
										<directory>${basedir}/src/test/protobuf</directory>
										<includes>
											<include>ColumnAggregationNullResponseProtocol.proto</include>
											<include>ColumnAggregationProtocol.proto</include>
											<include>ColumnAggregationWithErrorsProtocol.proto</include>
											<include>DummyRegionServerEndpoint.proto</include>
											<include>IncrementCounterProcessor.proto</include>
											<include>PingProtocol.proto</include>
											<include>TestProcedure.proto</include>
											<include>test.proto</include>
											<include>test_rpc_service.proto</include>
										</includes>
									</source>
									<output>${basedir}/src/test/java/</output>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
